# Email Server Requirements for vlayer Email Verification

## Frontend Dependencies

### Required npm packages for the client:
```bash
npm install uuid @types/uuid
npm install @vlayer/sdk
```

### Environment Variables (.env):
```
VITE_EMAIL_SERVICE_URL=https://email-example-inbox.s3.us-east-2.amazonaws.com
VITE_EMAIL_DOMAIN=proving.vlayer.xyz
VITE_EMAIL_PROVER_ADDRESS=<deployed_prover_address>
VITE_EMAIL_VERIFIER_ADDRESS=<deployed_verifier_address>
```

## Backend Infrastructure Requirements

### Option 1: AWS Infrastructure
- AWS SES (Simple Email Service)
- AWS Lambda
- AWS S3 Bucket
- AWS IAM Roles and Policies

### Option 2: Self-hosted Email Server
- Linux server with public IP
- Postfix mail server
- AWS CLI or S3 SDK
- Domain with MX records

### Option 3: Node.js Email Server
```bash
npm install smtp-server
npm install mailparser
npm install aws-sdk
```

## DNS Requirements

### MX Record:
```
proving.vlayer.xyz.    IN    MX    10    mail.proving.vlayer.xyz.
```

### SPF Record:
```
proving.vlayer.xyz.    IN    TXT    "v=spf1 include:_spf.google.com ~all"
```

### DKIM Record (example):
```
default._domainkey.proving.vlayer.xyz.    IN    TXT    "v=DKIM1; k=rsa; p=<public_key>"
```

## S3 Bucket Configuration

### Bucket Policy:
```json
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Sid": "PublicReadGetObject",
      "Effect": "Allow",
      "Principal": "*",
      "Action": "s3:GetObject",
      "Resource": "arn:aws:s3:::email-example-inbox/*.eml"
    }
  ]
}
```

### CORS Configuration:
```json
[
  {
    "AllowedHeaders": ["*"],
    "AllowedMethods": ["GET", "HEAD"],
    "AllowedOrigins": ["*"],
    "ExposeHeaders": []
  }
]
```

## Security Requirements

1. **SSL/TLS Certificate** for the email server
2. **DKIM signing** for email authentication
3. **Rate limiting** to prevent abuse
4. **Input validation** for email content
5. **File size limits** for .eml files
6. **Automatic cleanup** of old files

## Monitoring and Logging

1. **Email delivery monitoring**
2. **S3 upload success/failure tracking**
3. **Error logging and alerting**
4. **Performance metrics**

## Testing Requirements

### Test Email Format:
```
From: user@example.com
To: {uuid}@proving.vlayer.xyz
Subject: Verify my email at address: 0x1234567890123456789012345678901234567890

Email body content here.
```

### Test Commands:
```bash
# Check if email was processed
curl -I https://email-example-inbox.s3.us-east-2.amazonaws.com/{uuid}.eml

# Fetch email content
curl https://email-example-inbox.s3.us-east-2.amazonaws.com/{uuid}.eml
``` 